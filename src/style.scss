// Copyright (c) Alaska Air. All right reserved. Licensed under the Apache-2.0 license
// See LICENSE in the project root for license information.

// ---------------------------------------------------------------------

// Creates ods-hyperlink CSS UI definition of shape

// Boilerplate Sass imports
@import "./tokens/tokenVariables";
@import "./tokens/componentShapeVariables";

@import "./tokens/tokenProperties";
@import "./tokens/componentShapeProperties";

@import "./node_modules/@alaskaairux/ods-button/dist/tokens/componentProperties";
@import "./node_modules/@alaskaairux/ods-button/dist/sassPartials/shared_style";

@import "./node_modules/@alaskaairux/orion-web-core-style-sheets/dist/utilityMixins/focusVisible";
@import "./node_modules/@alaskaairux/orion-web-core-style-sheets/dist/breakpoints";
@import "./node_modules/@alaskaairux/orion-web-core-style-sheets/dist/utilityMixins/anchor-roleButton";
@import "./node_modules/@alaskaairux/orion-web-core-style-sheets/dist/utilityMixins/anchor-roleTab";
@import "./node_modules/@alaskaairux/orion-web-core-style-sheets/dist/baselineLTE";
@import "./node_modules/@alaskaairux/orion-web-core-style-sheets/dist/animation";


$iconMap: (
  stepout: true
);

@import "./node_modules/@alaskaairux/orion-icons/dist/orion-icons";


:host(.focus-visible) {
  .hyperlink,
  .hyperlink--button,
  .hyperlink--tab {
    @include focus-hyperlink(css);
  }

  .hyperlink--cta {
    @include focus-button(css);
    outline: none;
  }
}

// Supported utility classes
:host(.util_paddingLeft--none) {
  .hyperlink {
    padding-left: 0;
  }
}

:host(.util_paddingRight--none) {
  .hyperlink {
    padding-right: 0;
  }
}

:host([role=tab]) {
  margin-right: calc(var(--size-scale-micro) * -1);
}

:host([responsive]) {
  @include breakpoint-medium {
    display: flex;
    width: fit-content;
  }
}

:host([reverse]) {
  @include breakpoint-narrow {
    flex-direction: row-reverse;
    width: initial;
  }
}

// layout styles - define any layout specifications for UI that is contained WITHIN the component
// never define layout that would cause effect on element ouside the scope of this component

// component shape styles
.hyperlink {
  color: var(--ods-hyperlink-color);
  padding: var(--ods-hyperlink-padding);
  text-decoration: var(--ods-hyperlink-decoration);

  // includes mixin to bring in ods-button defualt style
  &--cta {
    @include sharedButton(true);

    display: block;
  }

  &:visited {
    color: var(--ods-hyperlink-visited-color);
  }

  :host(:not(.is-touching)) & {
    &:hover {
      color: var(--ods-hyperlink-hover-color);
      text-decoration: var(--ods-hyperlink-hover-decoration);
    }

    &--inline {
      &:hover {
        text-decoration: var(--ods-hyperlink-inline-hover-decoration)
      }
    }

    &--darktheme {
      &:hover {
        color: var(--ods-hyperlink-darktheme-hover-color);
      }
    }
  }

  &--inline {
    padding: var(--ods-hyperlink-inline-padding);
    text-decoration: var(--ods-hyperlink-inline-decoration);
  }

  &--darktheme {
    color: var(--ods-hyperlink-darktheme-color);

    &:visited {
      color: var(--ods-hyperlink-darktheme-visited-color);
    }
  }
}

svg {
  margin-left: var(--ods-hyperlink-svg-margin-left);
}

// class to support role=button
.hyperlink--button {
  @include anchorButton(css, component);
}

// class to support role=tab
.hyperlink--tab {
  @include anchorTab(css, component);
}
